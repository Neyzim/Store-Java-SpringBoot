version: '3.8'
services:
  inventory-service-db:
    image: mysql:8
    environment:
      MYSQL_DATABASE: inventariodb
      MYSQL_ROOT_PASSWORD: 1234567890
    volumes:
      - inventory_service_db_data:/var/lib/mysql
    ports:
      - "3306:3306"

  inventory_service:
    build: ./inventory-service
    depends_on:
      - "inventory-service-db"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://inventory-service-db:3306/inventariodb
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: 1234567890
    ports:
      - "8082:8082"

  orders_service_db:
    image: postgres
    environment:
      POSTGRES_DB: pedidosdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234567890
    volumes:
      - orders_service_db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  orders_service:
    build: ./orders-service
    depends_on:
      orders_service_db:
        condition: service_healthy
      kafka:
        condition: service_started
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://orders_service_db:5432/pedidosdb
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: 1234567890
      SERVER_PORT: 8081
      SPRING_PROFILES_ACTIVE: postgres
    ports:
      - "8081:8081"

  payment_service_db:
    image: mongo:8
    environment:
      MONGO_DB: pagamentosdb
    volumes:
      - payment_services_db_data:/data/db
    ports:
      - "27017:27017"

  payment_service:
    build: ./payment-service
    depends_on:
      - payment_service_db
    environment:
      MONGO_DATASOURCE_URL: mongodb://payment_service_db:27017/pagamentosdb
      SERVER_PORT: 8083
    ports:
      - "8083:8083"

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.4.3
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: "local"
      KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS: "kafka:9092"
      KAFKA_CLUSTERS_0_ZOOKEEPER: "zookeeper:2181"
    depends_on:
      - kafka

volumes:
  inventory_service_db_data:
  orders_service_db_data:
  payment_services_db_data:
  zookeeper:
  kafka:
  kafka-ui:


